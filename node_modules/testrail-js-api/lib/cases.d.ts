import type { TestRail } from "./api";
import type { Case, AddCase, CaseHistory } from "./interfaces";
export declare function getCase(this: TestRail, case_id: number): Promise<{
    response: import("node-fetch").Response;
    value: Case;
}>;
export declare function getCases(this: TestRail, project_id: number, queryVariables?: {
    created_after?: number;
    created_before?: number;
    created_by?: number[];
    filter?: string;
    limit?: number;
    offset?: number;
    milestone_id?: number[];
    priority_id?: number[];
    refs_filter?: string;
    section_id?: number;
    suite_id?: number;
    template_id?: number[];
    type_id?: number[];
    updated_after?: number;
    updated_before?: number;
    updated_by?: number[];
}): Promise<{
    response: import("node-fetch").Response;
    value: Case[];
}>;
export declare function getHistoryForCase(this: TestRail, case_id: number): Promise<{
    response: import("node-fetch").Response;
    value: CaseHistory;
}>;
export declare function addCase(this: TestRail, section_id: number, case_data: AddCase): Promise<{
    response: import("node-fetch").Response;
    value: Case;
}>;
export declare function updateCase(this: TestRail, case_id: number, case_data: AddCase): Promise<{
    response: import("node-fetch").Response;
    value: Case;
}>;
export declare function updateCases(this: TestRail, project_id: number, case_data: AddCase, queryVariables?: {
    suite_id?: number;
}): Promise<{
    response: import("node-fetch").Response;
    value: Case;
}>;
export declare function deleteCase(this: TestRail, case_id: number): Promise<{
    response: import("node-fetch").Response;
    value: unknown;
}>;
export declare function deleteCases(this: TestRail, project_id: number, case_ids: number[], queryVariables?: {
    suite_id?: number;
    soft?: 0 | 1;
}): Promise<{
    response: import("node-fetch").Response;
    value: unknown;
}>;
