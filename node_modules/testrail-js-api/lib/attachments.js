"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.delete_attachment = exports.get_attachment = exports.get_attachments_for_test = exports.get_attachments_for_run = exports.get_attachments_for_plan_entry = exports.get_attachments_for_plan = exports.get_attachments_for_case = exports.addAttachmentToResult = exports.addAttachmentToPlanEntry = exports.addAttachmentToPlan = void 0;
const fs_1 = __importDefault(require("fs"));
const form_data_1 = __importDefault(require("form-data"));
function addAttachmentToPlan(plan_id, filePath) {
    const formData = new form_data_1.default();
    formData.append("attachment", fs_1.default.createReadStream(filePath));
    return this.apiPost("add_attachment_to_plan/" + plan_id, formData, {
        headers: {},
        requestType: 2,
    });
}
exports.addAttachmentToPlan = addAttachmentToPlan;
function addAttachmentToPlanEntry(plan_id, entry_id, filePath) {
    const formData = new form_data_1.default();
    formData.append("attachment", fs_1.default.createReadStream(filePath));
    return this.apiPost("add_attachment_to_plan_entry/" + plan_id + "/" + entry_id, formData, {
        headers: {},
        requestType: 2,
    });
}
exports.addAttachmentToPlanEntry = addAttachmentToPlanEntry;
function addAttachmentToResult(result_id, filePath) {
    const formData = new form_data_1.default();
    formData.append("attachment", fs_1.default.createReadStream(filePath));
    return this.apiPost("add_attachment_to_result/" + result_id, formData, {
        headers: {},
        requestType: 2,
    });
}
exports.addAttachmentToResult = addAttachmentToResult;
function get_attachments_for_case(case_id) {
    return this.apiGet("get_attachments_for_case/" + case_id);
}
exports.get_attachments_for_case = get_attachments_for_case;
function get_attachments_for_plan(plan_id) {
    return this.apiGet("get_attachments_for_plan/" + plan_id);
}
exports.get_attachments_for_plan = get_attachments_for_plan;
function get_attachments_for_plan_entry(plan_id, entry_id) {
    return this.apiGet("get_attachments_for_plan_entry/" + plan_id + "/" + entry_id);
}
exports.get_attachments_for_plan_entry = get_attachments_for_plan_entry;
function get_attachments_for_run(run_id) {
    return this.apiGet("get_attachments_for_run/" + run_id);
}
exports.get_attachments_for_run = get_attachments_for_run;
function get_attachments_for_test(test_id) {
    return this.apiGet("get_attachments_for_test/" + test_id);
}
exports.get_attachments_for_test = get_attachments_for_test;
function get_attachment(attachment_id) {
    return this.apiGet("get_attachment/" + attachment_id);
}
exports.get_attachment = get_attachment;
function delete_attachment(attachment_id) {
    return this.apiPost("delete_attachment/" + attachment_id);
}
exports.delete_attachment = delete_attachment;
