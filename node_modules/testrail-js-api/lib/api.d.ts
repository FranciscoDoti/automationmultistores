import { Response } from "node-fetch";
import { addAttachmentToPlan, addAttachmentToPlanEntry, addAttachmentToResult, delete_attachment, get_attachment, get_attachments_for_case, get_attachments_for_plan, get_attachments_for_plan_entry, get_attachments_for_run, get_attachments_for_test } from "./attachments";
import { addCase, deleteCase, deleteCases, getCase, getCases, getHistoryForCase, updateCase, updateCases } from "./cases";
import { add_case_field, getCaseFields } from "./case_fields";
import { getCaseTypes } from "./case_types";
import { addConfig, addConfigGroup, deleteConfig, deleteConfigGroup, getConfigs, updateConfig, updateConfigGroup } from "./configurations";
import { addMilestone, deleteMilestone, getMilestone, getMilestones, updateMilestone } from "./milestones";
import { addPlan, addPlanEntry, addRunToPlanEntry, closePlan, deletePlan, deletePlanEntry, deleteRunFromPlanEntry, getPlan, getPlans, updatePlan, updatePlanEntry, updateRunInPlanEntry } from "./plans";
import { getPriorities } from "./priorities";
import { addProject, deleteProject, getProject, getProjects, updateProject } from "./projects";
import { getReports, runReport } from "./reports";
import { addResult, addResultForCase, addResults, addResultsForCases, getResults, getResultsForCase, getResultsForRun } from "./results";
import { getResultFields } from "./result_fields";
import { addRun, closeRun, deleteRun, getRun, getRuns, updateRun } from "./runs";
import { addSection, deleteSection, getSection, getSections, updateSection } from "./sections";
import { getStatuses } from "./statuses";
import { addSuite, deleteSuite, getSuite, getSuites, updateSuite } from "./suites";
import { getTemplates } from "./templates";
import { getTest, getTests } from "./tests";
import { getUser, getCurrentUser, getUserByEmail, getUsers } from "./users";
import { HttpMethod, RequestOptions } from "./interfaces";
export declare class TestRail {
    host: string;
    baseUrl: string;
    authHeader: string;
    constructor(host: string, user: string, apiKey: string, baseUrl?: string);
    _callAPI: <T>({ method, apiUrl, body, options, }: {
        method: HttpMethod;
        apiUrl: string;
        body?: any;
        options?: RequestOptions | undefined;
    }) => Promise<{
        response: Response;
        value: T;
    }>;
    apiGet: <T>(apiUrl: string, options?: RequestOptions | undefined) => Promise<{
        response: Response;
        value: T;
    }>;
    apiPost: <T>(apiUrl: string, body?: any, options?: RequestOptions | undefined) => Promise<{
        response: Response;
        value: T;
    }>;
    addAttachmentToPlan: typeof addAttachmentToPlan;
    addAttachmentToPlanEntry: typeof addAttachmentToPlanEntry;
    addAttachmentToResult: typeof addAttachmentToResult;
    get_attachments_for_case: typeof get_attachments_for_case;
    get_attachments_for_plan: typeof get_attachments_for_plan;
    get_attachments_for_plan_entry: typeof get_attachments_for_plan_entry;
    get_attachments_for_run: typeof get_attachments_for_run;
    get_attachments_for_test: typeof get_attachments_for_test;
    get_attachment: typeof get_attachment;
    delete_attachment: typeof delete_attachment;
    getCase: typeof getCase;
    getCases: typeof getCases;
    getHistoryForCase: typeof getHistoryForCase;
    addCase: typeof addCase;
    updateCase: typeof updateCase;
    updateCases: typeof updateCases;
    deleteCase: typeof deleteCase;
    deleteCases: typeof deleteCases;
    getCaseFields: typeof getCaseFields;
    add_case_field: typeof add_case_field;
    getCaseTypes: typeof getCaseTypes;
    getConfigs: typeof getConfigs;
    addConfigGroup: typeof addConfigGroup;
    addConfig: typeof addConfig;
    updateConfigGroup: typeof updateConfigGroup;
    updateConfig: typeof updateConfig;
    deleteConfigGroup: typeof deleteConfigGroup;
    deleteConfig: typeof deleteConfig;
    getMilestone: typeof getMilestone;
    getMilestones: typeof getMilestones;
    addMilestone: typeof addMilestone;
    updateMilestone: typeof updateMilestone;
    deleteMilestone: typeof deleteMilestone;
    getPlan: typeof getPlan;
    getPlans: typeof getPlans;
    addPlan: typeof addPlan;
    addPlanEntry: typeof addPlanEntry;
    addRunToPlanEntry: typeof addRunToPlanEntry;
    updatePlan: typeof updatePlan;
    updatePlanEntry: typeof updatePlanEntry;
    updateRunInPlanEntry: typeof updateRunInPlanEntry;
    closePlan: typeof closePlan;
    deletePlan: typeof deletePlan;
    deletePlanEntry: typeof deletePlanEntry;
    deleteRunFromPlanEntry: typeof deleteRunFromPlanEntry;
    getPriorities: typeof getPriorities;
    getProject: typeof getProject;
    getProjects: typeof getProjects;
    addProject: typeof addProject;
    updateProject: typeof updateProject;
    deleteProject: typeof deleteProject;
    getReports: typeof getReports;
    runReport: typeof runReport;
    getResults: typeof getResults;
    getResultsForCase: typeof getResultsForCase;
    getResultsForRun: typeof getResultsForRun;
    addResult: typeof addResult;
    addResultForCase: typeof addResultForCase;
    addResults: typeof addResults;
    addResultsForCases: typeof addResultsForCases;
    getResultFields: typeof getResultFields;
    getRun: typeof getRun;
    getRuns: typeof getRuns;
    addRun: typeof addRun;
    updateRun: typeof updateRun;
    closeRun: typeof closeRun;
    deleteRun: typeof deleteRun;
    getSection: typeof getSection;
    getSections: typeof getSections;
    addSection: typeof addSection;
    updateSection: typeof updateSection;
    deleteSection: typeof deleteSection;
    getStatuses: typeof getStatuses;
    getSuite: typeof getSuite;
    getSuites: typeof getSuites;
    addSuite: typeof addSuite;
    updateSuite: typeof updateSuite;
    deleteSuite: typeof deleteSuite;
    getTemplates: typeof getTemplates;
    getTest: typeof getTest;
    getTests: typeof getTests;
    getUser: typeof getUser;
    getCurrentUser: typeof getCurrentUser;
    getUserByEmail: typeof getUserByEmail;
    getUsers: typeof getUsers;
}
